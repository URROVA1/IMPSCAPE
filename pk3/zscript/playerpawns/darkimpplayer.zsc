
////////// IMP PLAYER //////////
class DarkImpPlayer : ImpscapePlayerPawn{
	default{
		Speed 1.2;
		Health 100;
		Radius 20;
		Height 56;
		Mass 100;
		PainChance 255;
		player.maxhealth 100;
		player.soundclass "ImpPlayer";
		player.morphweapon "DarkImpArm";
		Player.ColorRange 0, 0;
		Player.DisplayName "DarkImp";
		Player.StartItem "DarkImpArm";
		Player.StartItem "MonsterMana", 1;
		Player.Face "STD";
		+NOSKIN;
	}
	States{
		Spawn:
			DRKS AB 7;
			DRKS A 0;
			Loop;
		See:
			DRKS AABBCCDD 3;
			Loop;
		Missile:
			DRKS EF 8;
			DRKS G  6;
			Goto Spawn;
		Melee:
			DRKS EF 8;
			DRKS G  6;
			Goto Spawn;
		Pain:
			DRKS H 4;
			DRKS H 4 A_Pain;
			Goto Spawn;
		Death:
			DRKS I 8 A_PlayerSkinCheck("AltSkinDeath");
			DRKS J 8 A_PlayerScream;
			DRKS K 6;
			DRKS L 6 A_NoBlocking;
			DRKS M -1;
			Stop;
		XDeath:
			DRKS N 5 A_PlayerSkinCheck("AltSkinXDeath");
			DRKS O 5 A_XScream;
			DRKS P 5;
			DRKS Q 5 A_NoBlocking;
			DRKS RST 5;
			DRKS U -1;
			Stop;
		AltSkinDeath:
			DRKS I 8;
			DRKS J 8 A_PlayerScream;
			DRKS K 6;
			DRKS L 6 A_NoBlocking;
			DRKS M -1;
			Stop;
		AltSkinXDeath:
			DRKS N 5 A_PlayerScream;
			DRKS O 5 A_NoBlocking;
			DRKS P 5;
			DRKS Q 5 A_SkullPop;
			DRKS RST 5;
			DRKS U -1;
			Stop;
	}
}


class DarkImpArm : weapon{
	default{
		radius 20;
		height 20;
		obituary "%o ate some k%'s DARKIMP fire";
		inventory.pickupmessage "DARKIMP-MAN";
		attacksound "imp/melee";
		weapon.selectionorder 2500;
		weapon.kickback 200;
		weapon.ammotype "MonsterMana";
		weapon.ammouse1 0;
		weapon.ammouse2 0;
		weapon.ammogive 1;
		weapon.SlotNumber 1;
	}
	
	//Va hacia al estado de ataque si el jugador deja de presionar AltFire
	action state _A_JumpIfNotHold(){
		int buttons = GetPlayerInput(INPUT_BUTTONS);
		if (!(buttons & BT_ALTATTACK)){
			return ResolveState("AltShoot");
		}
		return ResolveState(null);
	}

	States{
		Spawn:
			MANA A 2;
			loop;
		Deselect:
		  DIMD A 1 A_Lower;
		  LOOP;
		Select:
		  DIMD A 1 A_Raise;
		  LOOP;
		Ready:
		  DIMD A 7 A_WeaponReady;
		  DIMD A 0 A_GiveInventory ("MonsterMana",1);
		  LOOP;
		Fire:
		  DIMD A 0 A_JumpIfNoAmmo ("AltFire");
		  //Aca salta a un estado depende cuantos FirePowerUp tengas.
		  //Osea, cuantos mas FirePowerUp tengas, mas rapido disparas.
		  DIMD A 0 A_JumpIfInventory("FirePowerUp",4,"FireVeryFast");
		  DIMD A 0 A_JumpIfInventory("FirePowerUp",3,"FireFast");
		  DIMD A 0 A_JumpIfInventory("FirePowerUp",2,"FireMid");
		  DIMD A 0 A_JumpIfInventory("FirePowerUp",1,"FireSlow");
		  DIMD A 0 A_JumpIfInventory("FirePowerUp",0,"FireVerySlow");

		  //Muy lento (imp normal)
		  FireVerySlow:
			DIMD F 5;
			DIMD G 5 A_GunFlash;
			DIMD H 5 A_FireCustomMissile ("DarkFast");
			DIMD I 5;
			TNT1 A 5 A_ReFire;
			DIMD J 5;
			Goto Ready;
		  //Lento
		  FireSlow:
			DIMD F 4;
			DIMD G 4 A_GunFlash;
			DIMD H 4 A_FireCustomMissile ("DarkFast");
			DIMD I 4;
			TNT1 A 4 A_ReFire;
			DIMD J 4;
			Goto Ready;
		  //Normal
		  FireMid:
			DIMD F 3;
			DIMD G 3 A_GunFlash;
			DIMD H 3 A_FireCustomMissile ("DarkFast");
			DIMD I 3;
			TNT1 A 3 A_ReFire;
			DIMD J 3;
			Goto Ready;
		  //Rapido
		  FireFast:
			DIMD F 2;
			DIMD G 2 A_GunFlash;
			DIMD H 2 A_FireCustomMissile ("DarkFast");
			DIMD I 2;
			TNT1 A 2 A_ReFire;
			DIMD J 2;
			Goto Ready;
		  //Muy rapido
		  FireVeryFast:
			DIMD F 1;
			DIMD G 1 A_GunFlash;
			DIMD H 1 A_FireCustomMissile ("DarkFast");
			DIMD I 1;
			TNT1 A 1 A_ReFire;
			DIMD J 1;
			Goto Ready;

		Flash:
		  TNT1 A 5;
		  TNT1 A 5 bright A_Light1;
		  TNT1 A 0 A_Light0;
		  stop;

		AltFire:
			DIMD F 5;
		AltHold:
			DIMD A 0 A_JumpIfInventory("AltFireEnergy",6,"AltFireCharged");
			DIMD A 0 A_JumpIfInventory("FirePowerUp",4,"AltVeryFast");
			DIMD A 0 A_JumpIfInventory("FirePowerUp",3,"AltFast");
			DIMD A 0 A_JumpIfInventory("FirePowerUp",2,"AltMid");
			DIMD A 0 A_JumpIfInventory("FirePowerUp",1,"AltSlow");
			DIMD A 0 A_JumpIfInventory("FirePowerUp",0,"AltVerySlow");
		//Se van sumando los tics y haciendo mas lenta la carga.
		AltVerySlow:
			DIMD F 2 _A_JumpIfNotHold();
			DIMD F 2 _A_JumpIfNotHold();
		AltSlow:
			DIMD F 2 _A_JumpIfNotHold();
			DIMD F 2 _A_JumpIfNotHold();
		AltMid:
			DIMD F 2 _A_JumpIfNotHold();
			DIMD F 2 _A_JumpIfNotHold();
		AltFast:
			DIMD F 2 _A_JumpIfNotHold();
			DIMD F 2 _A_JumpIfNotHold();
		AltVeryFast:
			DIMD F 2 _A_JumpIfNotHold();
			DIMD G 2 {
				A_StopSound(CHAN_WEAPON);
				A_StartSound("ImpCharging", CHAN_WEAPON);
				A_GiveInventory("AltFireEnergy", 1);
			}
		AltFireCharged:
			DIMD F 1;
			DIMD G 1 A_ReFire;
		AltShoot:
			DIMD G 1 A_GunFlash;
			DIMD H 1 {
				while(CountInv("AltFireEnergy") > 0){
					A_FireProjectile ("DarkFast", random(-15,15), 1, 0, 0, 0, random(-2.5,2.5));
					A_TakeInventory("AltFireEnergy", 1);
				}
			}
			DIMD I 1;
			DIMD J 5;
			Goto Ready;
	}
}
